version: '3.9'
volumes:
  stonks-db:
  stonks-redis:
  stonks-storage:
  stonks-search:
  stonks-node_modules:
services:
  db:
    image: postgres:latest
    # Named volume to persist database data outside of container.
    # Format is "named_volume:path/in/container"
    volumes:
      - stonks-db:/var/lib/postgresql/data

      # Host mount for one-time initialization.
      # Format is "./path/on/host:/path/in/container"
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
  redis:
    image: redis:latest
    volumes:
      - stonks-redis:/var/lib/redis/data
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    tty: true
    volumes:
      - .:/stonks
      - stonks-storage:/media/storage/stonks
      - stonks-node_modules:/stonks/node_modules
    ports:
      - '3000:3000'
    links:
      - db
      - redis
      - elasticsearch
    env_file:
      - .env
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/stonks
      - stonks-storage:/media/storage/stonks
    command: bundle exec sidekiq
    links:
      - db
      - redis
      - elasticsearch
    env_file:
      - .env
  elasticsearch:
    image: elasticsearch:7.17.17
    ports:
      - '9200:9200'
    volumes:
      - stonks-search:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch-rails
      - cluster.routing.allocation.disk.threshold_enabled=false
